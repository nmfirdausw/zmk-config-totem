//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BSE 0
#define NUM 1
#define SYM 2
#define NBR 3
#define FNP 4
#define CTR 5
#define ADJ 6

&lt {
    tapping-term-ms = <100>;
    quick-tap-ms = <0>;
    retro-tap;
    flavor = "hold-preferred";
};

&mt {
    flavor = "balanced";
    tapping-term-ms = 150>;
    quick-tap-ms = <100>;
};

/ {
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };

        mo_sl: behavior_mo_sl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&sl>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        bse_layer {
            label= "BSE";
            bindings = <
                         &kp W        &kp L        &kp Y       &kp P           &kp B              &kp Z          &kp F           &kp O       &kp U       &kp APOS
                         &mt LSHFT C  &mt LCTRL R  &mt LALT S  &kp T           &kp G              &kp M          &kp N           &mt RALT E  &mt RCTL I  &mt RSHFT A
                &kp ESC  &kp Q        &kp J        &kp V       &kp D           &kp K              &kp X          &kp H           &kp FSLH    &kp COMMA   &kp PERIOD   &kp RET
                                                   &kp GLOBE   &mo_sl SYM SYM  &mt LCMD SPACE     &lt CTR SPACE  &mo_sl NUM NUM  &mo ADJ
            >;
        };
        num_layer {
            label= "NUM";
            bindings = <
                        &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp N6          &kp N7   &kp N8       &kp N9       &kp N0
                        &trans  &trans  &trans  &trans  &trans     &trans          &kp N4   &mt RALT N5  &mt RCTL N6  &trans
                &trans  &trans  &trans  &trans  &trans  &trans     &trans          &kp N1   &kp N2       &kp N3       &trans   &trans
                                        &trans  &trans  &trans     &mt RCMD SPACE  &to BSE  &to BSE
            >;
        };
        sym_layer {
            label= "SYM";
            bindings = <
                        &kp EXCL         &kp AT  &kp HASH  &kp DLLR  &kp PRCNT     &kp CARET       &kp AMPS        &kp STAR       &kp LPAR       &kp RPAR
                        &mt LSHFT GRAVE  &trans  &trans    &trans    &trans        &kp MINUS       &kp EQUAL       &mt RALT LBKT  &mt RCTL RBKT  &mt RSHFT SEMI
                &trans  &trans           &trans  &trans    &trans    &trans        &trans          &kp BSLH        &kp FSLH       &kp COMMA      &kp PERIOD      &trans
                                                 &trans    &to BSE   &trans        &mt RCMD SPACE  &mo_sl NBR NBR  &to BSE
            >;
        };
        nbr_layer {
            label= "NBR";
            bindings = <
                        &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp N6          &kp N7   &kp N8       &kp N9       &kp N0
                        &trans  &trans  &trans  &trans  &trans     &trans          &kp N4   &mt RALT N5  &mt RCTL N6  &trans
                &trans  &trans  &trans  &trans  &trans  &trans     &trans          &kp N1   &kp N2       &kp N3       &trans   &trans
                                        &trans  &trans  &trans     &mt RCMD SPACE  &to BSE  &to BSE
            >;
        };
        adj_layer {
            label= "ADJ";
            bindings = <
                        &none  &none     &kp C_BRI_DN  &kp C_BRI_UP  &bt BT_NXT     &none  &none  &none  &none  &none 
                        &none  &none     &kp C_VOL_DN  &kp C_VOL_UP  &bt BT_CLR     &none  &none  &none  &none  &none
                &trans  &none  &kp C_PP  &kp C_PREV    &kp C_NEXT    &bt BT_PRV     &none  &none  &none  &none  &none  &trans 
                                         &to FNP       &none         &none          &none  &none  &none
            >;
        };
        fnp_layer {
            label= "FNP";
            bindings = <
                        &kp F1  &kp F2   &kp F3     &kp F4   &none      &kp KP_SLASH   &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_PLUS
                        &kp F5  &kp F6   &kp F7     &kp F8   &none      &kp COMMA      &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MINUS
                &trans  &kp F9  &kp F10  &kp F11    &kp F12  &none      &kp PERIOD     &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_MULTIPLY  &kp KP_ENTER
                                         &kp GLOBE  &none    &trans     &lt CTR SPACE  &kp KP_N0  &to BSE
            >;
        };
        ctr_layer {
            label= "CTR";
            bindings = <
                        &trans     &kp ESC  &kp ESC  &trans  &trans     &trans    &kp HOME  &kp PG_UP  &kp BSPC   &trans
                        &kp GRAVE  &kp TAB  &trans   &trans  &trans     &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &kp RET
                &trans  &kp CAPS   &trans   &trans   &trans  &trans     &trans    &kp END   &kp PG_DN  &trans     &trans   &trans
                                            &trans   &trans  &trans     &none     &trans    &trans
            >;
        };
    };
};

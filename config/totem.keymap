#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define LYR0 0
#define LYR1 1
#define LYR2 2
#define LYR3 3
#define LYR4 4
#define LYR5 5

&lt {
    tapping-term-ms = <100>;
    quick-tap-ms = <0>;
    retro-tap;
    flavor = "hold-preferred";
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

/ {
    behaviors {
        mo_sl: behavior_mo_sl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&sl>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_lyr1 {
            timeout-ms = <100>;
            key-positions = <6 7 8 6 7>;
            bindings = <&tog 1>;
        };

        combo_lyr3 {
            timeout-ms = <100>;
            key-positions = <1 2 3>;
            bindings = <&tog 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        lyr0_layer {
            label = "Base Layer";
            bindings = <
         &kp W        &kp L       &kp Y        &kp P       &kp B          &kp Z        &kp F       &kp O                           &kp U       &kp SQT
         &mt LCTRL C  &mt LALT R  &mt LSHFT S  &mt LCMD T  &kp G          &kp M        &mt RCMD N  &mt RSHFT E                     &mt RALT I  &mt RCTRL A
&kp ESC  &kp Q        &kp J       &kp V        &kp D       &kp K          &kp X        &kp H       &kp SLASH                       &kp COMMA   &kp PERIOD   &kp RET
                                  &kp TAB      &mo_sl 2 2  &lt 1 ENTER    &lt 1 SPACE  &mo_sl 2 2  &mt RC(RG(RA(RS(RALT)))) GRAVE
            >;
        };

        lyr1_layer {
            label = "Nav, Num, Adjust Layer";
            bindings = <
        &kp N1           &kp N2        &kp N3           &kp N4          &kp N5        &kp N6    &kp N7      &kp N8    &kp N9      &kp N0
        &mt LCTRL GRAVE  &mt LALT TAB  &mt LSHFT PG_UP  &mt LCMD PG_DN  &bt BT_CLR    &kp LEFT  &kp DOWN    &kp UP    &kp RIGHT   &mt RCTRL COLON
&trans  &none            &none         &kp C_BRI_DN     &kp END         &bt BT_PRV    &none     &kp C_PREV  &kp C_PP  &kp C_NEXT  &none            &trans
                                       &trans           &trans          &kp ESCAPE    &kp ESC   &trans      &trans
            >;
        };

        lyr2_layer {
            label = "Symbol Layer";
            bindings = <
        &kp EXCL        &kp AT         &kp HASH        &kp DLLR       &kp PRCNT    &kp AMPS  &kp CARET       &kp MINUS       &kp UNDERSCORE  &kp DQT
        &mt LCTRL LPAR  &mt LALT LBRC  &mt LSHFT RBRC  &mt LCMD RPAR  &kp ASTRK    &kp PLUS  &mt RCMD EQUAL  &mt RSHFT LBKT  &mt RALT RBKT   &mt RCTRL SEMI
&trans  &kp GRAVE       &kp TILDE      &kp COLON       &kp CAPS       &kp GLOBE    &kp PIPE  &kp BSLH        &kp QUESTION    &kp LT          &kp GT          &trans
                                       &trans          &trans         &kp LC(D)    &kp BSPC  &trans          &trans
            >;
        };

        lyr3_layer {
            label = "Function and Keypad Layer";
            bindings = <
        &kp F1        &kp F2       &kp F3        &kp F4       &none     &kp KP_SLASH  &kp KP_N7       &kp KP_N8        &kp KP_N9       &kp KP_PLUS
        &mt LCTRL F5  &mt LALT F6  &mt LSHFT F7  &mt LCMD F8  &none     &kp COMMA     &mt RCMD KP_N4  &mt RSHFT KP_N5  &mt RALT KP_N6  &mt RCTRL KP_MINUS
&trans  &kp F9        &kp F10      &kp F11       &kp F12      &none     &kp PERIOD    &kp KP_N1       &kp KP_N2        &kp KP_N3       &kp KP_MULTIPLY     &trans
                                   &trans        &trans       &trans    &trans        &trans          &trans
            >;
        };
    };
};
